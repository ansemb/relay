==================================== INPUT ====================================
# expected-to-throw

query relayResolverWithUndefinedFragmentArgsLinkedFieldQuery {
  node(id: "SOME_ID") {
    ...relayResolverWithUndefinedFragmentArgsLinkedField_PopStarName
  }
}

fragment relayResolverWithUndefinedFragmentArgsLinkedField_PopStarName on User {
  pop_star(includeName: $undefined) @waterfall {
    id
  }
}

fragment relayResolverWithUndefinedFragmentArgsLinkedField_PopStarNameResolverFragment_name on User @argumentDefinitions(
    includeName: {type: "Boolean!"}
  ) {
  name @include(if: $includeName)
  id
}

# %extensions%

extend type User {
  pop_star(includeName: Boolean!): User @relay_resolver(fragment_name: "relayResolverWithUndefinedFragmentArgsLinkedField_PopStarNameResolverFragment_name", import_path: "./path/to/PopStarNameResolver.js")
}
==================================== ERROR ====================================
✖︎ Expected `@alias` directive. `relayResolverWithUndefinedFragmentArgsLinkedField_PopStarName` is defined on `User` which might not match this selection type of `Node`. Add `@alias` to this spread to expose the fragment reference as a nullable property.

  relay-resolver-with-undefined-fragment-args-linked-field.invalid.graphql:5:8
    4 │   node(id: "SOME_ID") {
    5 │     ...relayResolverWithUndefinedFragmentArgsLinkedField_PopStarName
      │        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    6 │   }
